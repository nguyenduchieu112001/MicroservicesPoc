// <auto-generated />
using AuthService.DataAccess.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthService.Migrations
{
    [DbContext(typeof(InsuranceAgentDbContext))]
    [Migration("20240130095235_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthService.Domain.InsuranceAgent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("InsuranceAgent", (string)null);
                });

            modelBuilder.Entity("AuthService.Domain.InsuranceAgentRoles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AgentId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("RoleId");

                    b.ToTable("InsuranceAgentRoles", (string)null);
                });

            modelBuilder.Entity("AuthService.Domain.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("AuthService.Domain.UserType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserType", (string)null);
                });

            modelBuilder.Entity("AuthService.Domain.InsuranceAgent", b =>
                {
                    b.HasOne("AuthService.Domain.UserType", "UserType")
                        .WithMany("InsuranceAgents")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("AuthService.Domain.InsuranceAgentRoles", b =>
                {
                    b.HasOne("AuthService.Domain.InsuranceAgent", "InsuranceAgent")
                        .WithMany("AgentRoles")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthService.Domain.Role", "Role")
                        .WithMany("AgentRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsuranceAgent");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AuthService.Domain.InsuranceAgent", b =>
                {
                    b.Navigation("AgentRoles");
                });

            modelBuilder.Entity("AuthService.Domain.Role", b =>
                {
                    b.Navigation("AgentRoles");
                });

            modelBuilder.Entity("AuthService.Domain.UserType", b =>
                {
                    b.Navigation("InsuranceAgents");
                });
#pragma warning restore 612, 618
        }
    }
}
